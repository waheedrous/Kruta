@model HPE.Kruta.Model.Queue


        <div class="container-fluid">
            <div class="row">

                <div class="col-sm-3">
                    <div class="inner custom-inner">
                        <div class="row custom-row-1">
                            <h5 style="font-weight: 700 !important;">Document Details </h5>
                            <br />
                        </div>
                        <div class="row custom-row-2">
                            @if (Model != null && Model.Document != null)
                            {
                            <text>Recorded Date: @String.Format("{0:MM-dd-yyyy}", Model.Document.RecordedDateTime)<br /></text>
                            }
                    Document Number: @Html.DisplayFor(m => m.Document.DocumentNumber)<br />
                    Document Type: @Html.DisplayFor(m => m.Document.DocumentSubType.DocumentType.Description)<br />
                    <br />
                </div>
            </div>
        </div>


        <div class="col-sm-3">
            <div class="inner custom-inner">
                <div class="row custom-row-1">

                    <h5 style="font-weight: 700 !important;">Property Details </h5>
                    <br />
                </div>
                <div class="row custom-row-2">
                    Parcel Number: @Html.DisplayFor(m => m.Property.ParcelNumber)<br />
                    Legal Description: @Html.DisplayFor(m => m.Property.FullLegalDescription)<br />
                    <br />
                    Class Code: @Html.DisplayFor(m => m.Property.PropertyClass.Description)<br />
                </div>
            </div>
        </div>

        <div class="col-sm-3">
            <div class="inner custom-inner">
                <div class="row custom-row-1">
                    <h5 style="font-weight: 700 !important;">Notes</h5>
                    <br/>
                </div>
                <div class="row custom-row-2" style="overflow-y: scroll; height:100px;">
                    @if (Model != null && Model.QueueNotes != null)
                            {
                                foreach (var note in Model.QueueNotes)
                                {
                            <table>
                                <tr>
                                    <td>@string.Format("{0} {1:MM-dd-yyyy hh:mm}: {2}", note.Employee.EmployeeName, note.CreatedOn, note.Note)</td>



                                </tr>
                            </table>
                                }
                            }
                    
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="inner" style="background-color: #D1D8E9">
                        <div class="dropdown custom-docstatusdropdown">
                           <label style="font-weight: 700 !important;"> Document Status: </label>
                    
                            @if (ViewBag.DocumentStatuses != null)
                            {
                                @Html.DropDownList("DocumentStatuses")
                                @Html.Hidden("modelIDVal", Model.QueueID);
                                @Html.Hidden("documentIDVal", Model.DocumentID);
                            }

                            @Html.TextArea("Notes")

                           <br />
                            
                            <div class="SR-btn-group ">
                           <input value="Save" id="btnSubmit" name="btnSubmit" type="Submit" onclick="SaveQueueStatus();"  class="btn cust-warning custom-btn-SR"/>
                             
                            <input value="Route" id="btnRoute" name="btnRoute" type="Submit" onclick="SaveRouteStatus();" class="btn cust-warning custom-btn-SR" />
                       </div>

                       </div>
                       
                        </div>
                        
                           
                          
                        


            </div>
        </div>
    </div>

<!-- Modal Start 2 -->
<div class="modal fade" id="routeModal" role="dialog">
    <div class="modal-dialog custom-popupMain">

        <!-- Modal Content Start -->
        <div class="modal-content custom-popupMain-Content">
            <div class="modal-header custom-popupMain-Header">
                <button type="button" class="close custom-popupMain-Close-Btn" data-dismiss="modal">&times;</button>
                <h6 class="modal-title custom-popupMain-Hr">ROUTE DOCUMENT TO</h6>
            </div>
            <div class="modal-body">
                <!-- Form Start -->
                <div class="container">
                    <form>
                        <div class="form-group">
                            <label for="departments">Departments:</label>
                            @if (ViewBag.DepartmentsList != null)
                            {
                                @Html.DropDownList("DepartmentsList", ViewBag.DepartmentsList as SelectList, new { @class = "form-control form-control-custom", @id = "departmentsList" })
                            }
                        </div>
                    </form>
                </div>
                <!-- Form End -->
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-warning custom-popupMain-Footer-Btn" onclick="showRouteConfirmModal('Confirmation', 'Are you sure you want to save and route the current Document?');">Route</button>
            </div>
        </div>
        <!-- Modal Content End -->

    </div>
</div>